% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Seurat.Utils.Visualization.R
\name{plotAndSaveHeatmaps}
\alias{plotAndSaveHeatmaps}
\title{Plot and Save Heatmaps from Metadata Calculation Results}
\usage{
plotAndSaveHeatmaps(
  results,
  path = getwd(),
  file.prefix = "heatmap_",
  scale = "column",
  cluster_rows = FALSE,
  display_numbers = TRUE,
  show_rownames = TRUE,
  show_colnames = TRUE,
  ...
)
}
\arguments{
\item{results}{A list containing data frames with calculated metrics for each specified
metadata feature, grouped by categories. Typically, this is the output from a
function like \code{calculateAverageMetaData}.}

\item{path}{The directory path where the heatmap images will be saved.
Defaults to the current working directory (\code{getwd()}).}

\item{file.prefix}{A prefix for the filenames of the saved heatmap images.
Defaults to "heatmap_".}

\item{scale}{Character indicating if the values should be scaled in the row direction,
column direction, both ('row', 'column', 'none'). Defaults to "column".}

\item{cluster_rows}{Logical indicating whether to cluster rows. Defaults to FALSE.}

\item{show_rownames}{Logical indicating whether to show row names. Defaults to TRUE.}

\item{show_colnames}{Logical indicating whether to show column names. Defaults to TRUE.}

\item{...}{Additional arguments passed to \code{pheatmap::pheatmap}.}
}
\value{
Invisible. The function primarily generates and saves files without returning data.
}
\description{
Generates and saves heatmap visualizations for each metric in the results obtained
from metadata calculations, such as mean or median values of specified features
across different categories.
}
\details{
This function loops through each metric in the \code{results}, creates a heatmap
for it using \code{pheatmap}, and saves the heatmap as a PNG file in the specified path.
The file names will start with the provided \code{file.prefix}, followed by the metric name.
}
\examples{
# Assuming `results` is the output from `calculateAverageMetaData`:
plotAndSaveHeatmaps(results, path = "path/to/save/heatmaps", file.prefix = "myData_")

}
